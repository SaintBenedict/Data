<?xml version="1.0" encoding="utf-8" ?>
<Defs>
  <QuestScriptDef>
    <defName>PawnLend</defName>
    <rootSelectionWeight>1</rootSelectionWeight>
    <expireDaysRange>4~8</expireDaysRange>
    <questNameRules>
      <rulesStrings>
        <li>questName->[worker] Outsourcing</li>
        <li>questName->Contract [worker]s</li>
        <li>questName->Temporary Workers</li>
        <li>questName->[worker] Lending</li>
        <li>questName->[worker]s for [asker_faction_name]</li>
        <li>questName->Provisional [worker]s</li>
        <li>questName->Requesting [worker]s</li>

        <li>worker->Colonist</li>
        <li>worker->Worker</li>
        <li>worker->Laborer</li>
        <li>worker->Helper</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>

        <!-- Asker is faction leader -->
        <li>questDescription(asker_factionLeader==True)->[asker_faction_leaderTitle] [asker_nameFull] of [asker_faction_name] needs extra hands to help [dutyDescription]. [asker_pronoun] is asking you to lend [colonistCountToLend] to [asker_faction_name] for [lendForDays] days.\n\nAfter [lendForDays] days have passed, your colonists will be returned.\n\nIf you accept, a shuttle will arrive to collect the [colonistCountToLend]. When it takes off with them on board, [allRewardsDescriptions]</li>

        <li>disease->flu</li>
        <li>disease->plague</li>
        <li>disease->malaria</li>
        <li>disease->infection</li>


        <!-- Asker is royal -->
        <li>questDescription(asker_royalInCurrentFaction==True)->[asker_royalTitleInCurrentFaction] [asker_nameFull] of [asker_faction_name] wishes to add some life to [asker_possessive] court by showing off some [entertainerDescription]. [asker_pronoun] is asking you to lend [colonistCountToLend] to [asker_faction_name] for [lendForDays] days. After [lendForDays] days have passed, your colonists will be returned.\n\nIf you accept, a shuttle will arrive to collect the [colonistCountToLend]. When it takes off with them on board, [allRewardsDescriptions]</li>

        <li>colonistCountToLend(colonistsToLendCount==1)->1 colonist</li>
        <li>colonistCountToLend(colonistsToLendCount>1)->[colonistsToLendCount] colonists</li>

      </rulesStrings>
    </questDescriptionRules>
    
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_SubScript">
          <def>Util_RandomizePointsChallengeRating</def>
        </li>

        <!-- Calculate colonist count to lend -->
        <li Class="QuestNode_GetRandomInRangeForChallengeRating">
          <storeAs>colonyPercentageToLend</storeAs>
          <oneStarRange>0.0~0.35</oneStarRange>
          <twoStarRange>0.36~0.6</twoStarRange>
          <threeStarRange>0.61~0.75</threeStarRange>
        </li>

        <li Class="QuestNode_GetColonistCountFromColonyPercentage">
          <storeAs>colonistsToLendCount</storeAs>
          <colonyPercentage>$colonyPercentageToLend</colonyPercentage>
          <mustHaveFreeColonistsAvailableCount>2</mustHaveFreeColonistsAvailableCount>
        </li>

        <li Class="QuestNode_GetMap">
          <preferMapWithMinFreeColonists>$colonistsToLendCount</preferMapWithMinFreeColonists>
        </li>

        <!-- End if map removed before the quest is accepted -->
        <li Class="QuestNode_End">
          <inSignal>map.MapRemoved</inSignal>
          <outcome>Fail</outcome>
          <signalListenMode>NotYetAcceptedOnly</signalListenMode>
        </li>

        <!-- Get asker and assign some related text -->
        <!-- Decide the dutyDescription and entertainerDescriptions so we can use the same text in several letters -->
        <li Class="QuestNode_RandomNode">
          <nodes>
            <li Class="QuestNode_Sequence">
              <selectionWeight>0.5</selectionWeight>
              <nodes>
                <li Class="QuestNode_GetPawn">
                  <storeAs>asker</storeAs>
                  <mustBeFactionLeader>true</mustBeFactionLeader>
                  <allowPermanentEnemyFaction>false</allowPermanentEnemyFaction>
                  <minTechLevel>Industrial</minTechLevel>
                </li>
                <li Class="QuestNode_GetRandomElement">
                  <storeAs>dutyDescription</storeAs>
                  <options>
                    <li>gather the harvest</li>
                    <li>fortify a settlement</li>
                    <li>set up a settlement</li>
                    <li>watch for raiders</li>
                    <li>set up a hospital</li>
                    <li>contain an outbreak of [disease]</li>
                  </options>
                </li>
                <li Class="QuestNode_Set">
                  <name>returnLetterText</name>
                  <value>{PAWNS} have returned after helping [asker_nameFull] of [asker_faction_name] to [dutyDescription].</value>
                </li>
              </nodes>
            </li>
            <li Class="QuestNode_Sequence">
              <selectionWeight>0.5</selectionWeight>
              <nodes>
                <li Class="QuestNode_GetPawn">
                  <storeAs>asker</storeAs>
                  <canGeneratePawn>true</canGeneratePawn>
                  <allowPermanentEnemyFaction>false</allowPermanentEnemyFaction>
                  <mustHaveRoyalTitleInCurrentFaction>true</mustHaveRoyalTitleInCurrentFaction>
                  <minTechLevel>Industrial</minTechLevel>
                </li>
                <li Class="QuestNode_GetRandomElement">
                  <storeAs>entertainerDescription</storeAs>
                  <options>
                    <li>real hardy surface survivors</li>
                    <li>goofy jesters</li>
                    <li>foreign-accented servants</li>
                    <li>exotic human specimens</li>
                  </options>
                </li>
                <li Class="QuestNode_Set">
                  <name>returnLetterText</name>
                  <value>{PAWNS} have returned after being shown off as [entertainerDescription] in the court of [asker_royalTitleInCurrentFaction] [asker_nameFull] of [asker_faction_name].</value>
                </li>
              </nodes>
            </li>
          </nodes>
        </li>

        <!-- Calculate days to lend colonists for -->
        <li Class="QuestNode_GetRandomInRangeForChallengeRating">
          <storeAs>lendForDays</storeAs>
          <oneStarRange>5~10</oneStarRange>
          <twoStarRange>10~20</twoStarRange>
          <threeStarRange>20~30</threeStarRange>
          <roundRandom>true</roundRandom>
        </li>

        <!-- Calculate reward from colonistsToLendCount * lendForDays -->
        <li Class="QuestNode_EvaluateSimpleCurve">
          <value>$($colonistsToLendCount*$lendForDays)</value>
          <storeAs>rewardValue</storeAs>
          <curve>
            <points>
              <li>5, 500</li>
              <li>50, 1500</li>
              <li>200, 4000</li>
            </points>
          </curve>
        </li>

        <!-- Shuttle -->
        <li Class="QuestNode_ShuttleDelay">
          <delayTicks>3500</delayTicks>
            <node Class="QuestNode_Sequence">
              <nodes>
                <li Class="QuestNode_GenerateShuttle">
                  <storeAs>shuttle</storeAs>
                  <acceptColonists>true</acceptColonists>
                  <onlyAcceptColonists>true</onlyAcceptColonists>
                  <onlyAcceptHealthy>true</onlyAcceptHealthy>
                  <dropEverythingIfUnsatisfied>true</dropEverythingIfUnsatisfied>
                  <leaveImmediatelyWhenSatisfied>true</leaveImmediatelyWhenSatisfied>
                  <requireColonistCount>$colonistsToLendCount</requireColonistCount>
                </li>
                <li Class="QuestNode_SpawnSkyfaller">
                  <skyfallerDef>ShuttleIncoming</skyfallerDef>
                  <innerThings>$shuttle</innerThings>
                  <tryLandInShipLandingZone>True</tryLandInShipLandingZone>
                  <lookForSafeSpot>True</lookForSafeSpot>
                  <factionOfForSafeSpot>$asker</factionOfForSafeSpot>
                </li>
                <li Class="QuestNode_SendShuttleAwayOnCleanup">
                  <shuttle>$shuttle</shuttle>
                </li>
                <li Class="QuestNode_Letter">
                  <label>Shuttle arrived</label>
                  <text>The shuttle has arrived to collect [colonistsToLendCount] of your colonists.</text>
                  <lookTargets>$shuttle</lookTargets>
                </li>
                <li Class="QuestNode_ShuttleLeaveDelay">
                  <delayTicks>$(60000)</delayTicks>
                  <shuttle>$shuttle</shuttle>
                  <inSignalsDisable>
                    <li>shuttle.Destroyed</li>
                    <li>shuttle.SentSatisfied</li>
                    <li>shuttle.SentUnsatisfied</li>
                  </inSignalsDisable>
                  <node Class="QuestNode_Sequence">
                    <nodes>
                      <li Class="QuestNode_SendShuttleAway">
                        <shuttle>$shuttle</shuttle>
                        <dropEverything>true</dropEverything>
                      </li>
                      <li Class="QuestNode_End">
                        <outcome>Fail</outcome>
                      </li>
                    </nodes>
                  </node>
                </li>
            </nodes>
          </node>
        </li>

        <!-- Shuttle destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>shuttle.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Shuttle destroyed</label>
                <text>The shuttle sent to collect colonists has been destroyed.</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Shuttle sent away -->
        <li Class="QuestNode_Signal">
          <inSignal>shuttle.SentSatisfied</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_LendColonistsToFaction">
                <shuttle>$shuttle</shuttle>
                <lendColonistsToFactionOf>$asker</lendColonistsToFactionOf>
                <returnLentColonistsInTicks>$($lendForDays*60000)</returnLentColonistsInTicks>
                <outSignalComplete>ColonistsReturned</outSignalComplete>
              </li>
              <li Class="QuestNode_SendShuttleAway">
                <shuttle>$shuttle</shuttle>
              </li>
              <li Class="QuestNode_Delay">
                <delayTicks>$(randInt(300,600))</delayTicks>
                <node Class="QuestNode_Sequence">
                  <nodes>
                    <li Class="QuestNode_GiveRewards">
                      <parms>
                        <allowGoodwill>true</allowGoodwill>
                        <allowRoyalFavor>true</allowRoyalFavor>
                      </parms>
                    </li>
                  </nodes>
                </node>
              </li>
            </nodes>
          </node>
        </li>

        <li Class="QuestNode_Signal">
          <inSignal>ColonistsReturned</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label>Colonists returned</label>
                <text>$returnLetterText</text>
                <letterDef>PositiveEvent</letterDef>
              </li>
              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>
            </nodes>
          </node>
        </li>
        
        <li Class="QuestNode_Signal">
          <inSignal>shuttle.SentUnsatisfied</inSignal>
          <node Class="QuestNode_End">
            <outcome>Fail</outcome>
          </node>
        </li>
        
      </nodes>
    </root>
  </QuestScriptDef>
  
</Defs>